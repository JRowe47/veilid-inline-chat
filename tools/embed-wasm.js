import { readFile, writeFile } from 'fs/promises';

const wasm = await readFile('veilid_wasm_bg.wasm');
const mod = new WebAssembly.Module(wasm);
const b64 = wasm.toString('base64');

// build stub import object for required wbg functions
const imports = WebAssembly.Module.imports(mod)
  .filter(i => i.module === 'wbg')
  .map(i => `    ${i.name}: () => {}`)
  .join(',\n');

const js = [
  '// autogenerated by tools/embed-wasm.js',
  'export async function init() {',
  `  const bytes = Uint8Array.from(atob(${JSON.stringify(b64)}), c => c.charCodeAt(0));`,
  '  const imports = { wbg: {',
  imports,
  '  } };',
  '  const { instance } = await WebAssembly.instantiate(bytes, imports);',
  '  window.veilid = instance.exports;',
  '  return window.veilid;',
  '}',
  ''
].join('\n');

await writeFile('src/wasm-embedded.js', js);
console.log('Embedded veilid_wasm_bg.wasm into src/wasm-embedded.js');
